Dynamic Programming - GeeksQuiz GeeksQuiz Computer science mock tests for geeks Home Latest Questions Articles C/C++ Programs Contribute Books Subscribe 
 Dynamic Programming Please wait while the activity loads. If this activity does not load, try refreshing your browser. Also, this page requires javascript. Please visit using a browser with javascript enabled. If loading fails, click here to try again Question 1 Which of the following standard algorithms is not Dynamic Programming based. A Bellman–Ford Algorithm for single source shortest path B Floyd Warshall Algorithm for all pairs shortest paths C 0-1 Knapsack problem D Prim's Minimum Spanning Tree Discuss it Question 2 We use dynamic programming approach when A It provides optimal solution B The solution has optimal substructure C The given problem can be reduced to the 3-SAT problem D It's faster than Greedy Discuss it Question 2 Explanation:  http://www.geeksforgeeks.org/dynamic-programming-set-2-optimal-substructure-property/ Option (D) is incorrect because Greedy algorithms are generally faster than Dynamic programming. See http://www.geeksforgeeks.org/greedy-algorithms-set-1-activity-selection-problem/ Question 3 An algorithm to find the length of the longest monotonically increasing sequence of numbers in an array A[0 :n-1] is given below. Let Li denote the length of the longest monotonically increasing sequence starting at index i in the array. Which of the following statements is TRUE? A The algorithm uses dynamic programming paradigm B The algorithm has a linear complexity and uses branch and bound paradigm C The algorithm has a non-linear polynomial complexity and uses branch and bound paradigm D The algorithm uses divide and conquer paradigm. Discuss it Question 3 Explanation:  Please see http://www.geeksforgeeks.org/dynamic-programming-set-3-longest-increasing-subsequence/ Question 4 Kadane algorithm is used to find: A Maximum sum subsequence in an array B Maximum sum subarray in an array C Maximum product subsequence in an array D Maximum product subarray in an array Discuss it Question 4 Explanation:  Kadane algorithm is used to find the maximum sum subarray in an array. It runs in O(n) time complexity. See details of the algorithm here. Question 5 Four matrices M1, M2, M3 and M4 of dimensions pxq, qxr, rxs and sxt respectively can be multiplied is several ways with different number of total scalar multiplications. For example, when multiplied as ((M1 X M2) X (M3 X M4)), the total number of multiplications is pqr + rst + prt. When multiplied as (((M1 X M2) X M3) X M4), the total number of scalar multiplications is pqr + prs + pst. If p = 10, q = 100, r = 20, s = 5 and t = 80, then the number of scalar multiplications needed is A 248000 B 44000 C 19000 D 25000 Discuss it Question 5 Explanation:  It is basically matrix chain multiplication problem. We get minimum number of multiplications using ((M1 X (M2 X M3)) X M4). Total number of multiplications = 100x20x5 (for M2 x M3) + 10x100x5 + 10x5x80 = 19000. Question 6 The subset-sum problem is defined as follows. Given a set of n positive integers, S = {a1 ,a2 ,a3 ,…,an} and positive integer W, is there a subset of S whose elements sum to W? A dynamic program for solving this problem uses a 2-dimensional Boolean array X, with n rows and W+1 columns. X[i, j],1 <= i <= n, 0 <= j <= W, is TRUE if and only if there is a subset of {a1 ,a2 ,...,ai} whose elements sum to j. Which of the following is valid for 2 <= i <= n and ai <= j <= W? A X[i, j] = X[i - 1, j] V X[i, j -ai] B X[i, j] = X[i - 1, j] V X[i - 1, j - ai] C X[i, j] = X[i - 1, j] V X[i, j - ai] D X[i, j] = X[i - 1, j] V X[i -1, j - ai] Discuss it Question 6 Explanation:  X[I, j] (2 <= i <= n and ai <= j <= W), is true if any of the following is true 1) Sum of weights excluding ai is equal to j, i.e., if X[i-1, j] is true. 2) Sum of weights including ai is equal to j, i.e., if X[i-1, j-ai] is true so that we get (j – ai) + ai as j See http://www.geeksforgeeks.org/dynamic-programming-subset-sum-problem/ for details. Question 7 In the above question, which entry of the array X, if TRUE, implies that there is a subset whose elements sum to W? A X[1, W] B X[n ,0] C X[n, W] D X[n -1, n] Discuss it Question 7 Explanation:  If we get the entry X[n, W] as true then there is a subset of {a1, a2, .. an} that has sum as W. Reference: http://en.wikipedia.org/wiki/Subset_sum_problem Question 8 A sub-sequence of a given sequence is just the given sequence with some elements (possibly none or all) left out. We are given two sequences X[m] and Y[n] of lengths m and n respectively, with indexes of X and Y starting from 0. We wish to find the length of the longest common sub-sequence(LCS) of X[m] and Y[n] as l(m,n), where an incomplete recursive definition for the function l(i,j) to compute the length of The LCS of X[m] and Y[n] is given below: 
l(i,j) = 0, if either i=0 or j=0
       = expr1, if i,j > 0 and X[i-1] = Y[j-1]
       = expr2, if i,j > 0 and X[i-1] != Y[j-1] A expr1 ≡ l(i-1, j) + 1 B expr1 ≡ l(i, j-1) C expr2 ≡ max(l(i-1, j), l(i, j-1)) D expr2 ≡ max(l(i-1,j-1),l(i,j)) Discuss it Question 8 Explanation:  In Longest common subsequence problem, there are two cases for X[0..i] and Y[0..j] 
1) The last characters of two strings match. 
   The length of lcs is length of lcs of X[0..i-1] and Y[0..j-1]
2) The last characters don't match.
   The length of lcs is max of following two lcs values
   a) LCS of X[0..i-1] and Y[0..j]
   b) LCS of X[0..i] and Y[0..j-1]
 Question 9 Consider two strings A = "qpqrr" and B = "pqprqrp". Let x be the length of the longest common subsequence (not necessarily contiguous) between A and B and let y be the number of such longest common subsequences between A and B. Then x + 10y = ___. A 33 B 23 C 43 D 34 Discuss it Question 9 Explanation:  The LCS is of length 4. There are 3 LCS of length 4 "qprr", "pqrr" and qpqr There are 9 questions to complete. You have completed questions question Your score is Correct Wrong Partial-Credit You have not finished your quiz. If you leave this page, your progress will be lost. Correct Answer You Selected Not Attempted Final Score on Quiz Attempted Questions Correct Attempted Questions Wrong Questions Not Attempted Total Questions on Quiz Question Details Results Date Score Hint Time allowed minutes seconds Time used Answer Choice(s) Selected Question Text Need more practice! Keep trying! Not bad! Good work! Perfect!      Tweet Categories Articles (105) Algorithms (21) C (13) C++ (16) Data Structures (29) DBMS (1) Interview Experiences (6) Java (2) Operating Systems (1) Searching and Sorting (10) Programs (35) Quizzes (1,744) Aptitude (1) Computer Science Quizzes (1,742) Algorithms (147) C (207) C++ (129) Data Structures (132) DBMS (2) GATE (1,046) Java (51) Operating Systems (28) Web technologies (1) Recent Discussions Valid XHTML Strict 1.0 Powered by WordPress & MooTools | MiniMoo 1.3.4
