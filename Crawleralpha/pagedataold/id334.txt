Find the largest multiple of 2, 3 and 5 - GeeksforGeeks GeeksforGeeks A computer science portal for geeks GeeksQuiz Login Home Algorithms DS GATE Interview Corner Q&A C C++ Java Books Contribute Ask a Q About Array Bit Magic C/C++ Articles GFacts Linked List MCQ Misc Output String Tree Graph Find the largest multiple of 2, 3 and 5 An array of size n is given. The array contains digits from 0 to 9. Generate the largest number using the digits in the array such that the number is divisible by 2, 3 and 5. For example, if the arrays is {1, 8, 7, 6, 0}, output must be: 8760. And if the arrays is {7, 7, 7, 6}, output must be: “no number can be formed”. Source: Amazon Interview | Set 7 This problem is a variation of “Find the largest multiple of 3“. Since the number has to be divisible by 2 and 5, it has to have last digit as 0. So if the given array doesn’t contain any zero, then no solution exists. Once a 0 is available, extract 0 from the given array. Only thing left is, the number should be is divisible by 3 and the largest of all. Which has been discussed here. Thanks to shashank for suggesting this solution. Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above.           Related Topics: Job Sequencing Problem | Set 1 (Greedy Algorithm) Multiply two polynomials Algorithm Practice Question for Beginners | Set 1 Count Distinct Non-Negative Integer Pairs (x, y) that Satisfy the Inequality x*x + y*y < n Binomial Heap Print all increasing sequences of length k from first n natural numbers Find n’th number in a number system with only 3 and 4 Minimum Cost Polygon Triangulation Tags: MathematicalAlgo Tweet Writing code in comment? Please use ideone.com and share the link here. Rajat import java.util.*; class max { static ArrayList ll; static void perm1(int []a,int k,int n,int m) { if(k==m) { String s=””; for(int i=0;i<m;i++) s=s+a[i]; long q=Long.parseLong(s); if(q%2==0&&q%3==0&&q%5==0) ll.add(q); } else { for(int j=k;j<n;j++) { int t=a[k]; a[k]=a[j]; a[j]=t; perm1(a,k+1,n,m); t=a[k]; a[k]=a[j]; a[j]=t; } } } public static void main(String[] args) { ll=new ArrayList(); int []a=new int[5]; a[0]=1; a[1]=8; a[2]=7; a[3]=6; a[4]=0; for(int i=1;i<6;i++) { perm1(a,0,5,i); } System.out.println("a"+Collections.max(ll)); } } pankaj the best way to do this is by sorting the array in descending order with zero in end and then checking the sum of elements if not divisible by 3 then eleminating the n-1th element in array http://effprog.blogspot.com Sambasiva Here is the simpler implementation of algorithm 2 http://effprog.blogspot.in/2012/11/find-largest-multiple-of-3-given-array.html Lokesh Thanks kanhaiya I think the answer of the first example should be 8760 NOT 8160? Kartik Thanks for pointing this out. We have corrected the example. Interview Experiences Advanced Data Structures Dynamic Programming Greedy Algorithms Backtracking Pattern Searching Divide & Conquer Mathematical Algorithms Recursion Geometric Algorithms Popular Posts All permutations of a given string Memory Layout of C Programs Understanding “extern” keyword in C Median of two sorted arrays Tree traversal without recursion and without stack! Structure Member Alignment, Padding and Data Packing Intersection point of two Linked Lists Lowest Common Ancestor in a BST. Check if a binary tree is BST or not Sorted Linked List to Balanced BST Follow @GeeksforGeeks Subscribe Recent Comments @geeksforgeeks, Some rights reserved        Contact Us! Powered by WordPress & MooTools, customized by geeksforgeeks team
