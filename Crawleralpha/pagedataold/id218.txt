[cs/0205005] PSPACE-Completeness of Sliding-Block Puzzles and Other Problems through
  the Nondeterministic Constraint Logic Model of Computation Cornell University Library We gratefully acknowledge support from the Simons Foundation and Carnegie Mellon University Libraries arXiv.org > cs > arXiv:cs/0205005 Search or Article-id (Help | Advanced search)   All papers Titles Authors Abstracts Full text Help pages Full-text links: Download: PDF PostScript Other formats Current browse context: cs < prev | next > new | recent | 0205 References & Citations NASA ADS 2 blog links (what is this?) DBLP - CS Bibliography listing | bibtex Robert A. Hearn Erik D. Demaine Bookmark (what is this?) Computer Science > Computational Complexity Title: PSPACE-Completeness of Sliding-Block Puzzles and Other Problems through the Nondeterministic Constraint Logic Model of Computation Authors: Robert A. Hearn, Erik D. Demaine (Submitted on 4 May 2002 (v1), last revised 11 Nov 2004 (this version, v5)) Abstract: We present a nondeterministic model of computation based on reversing edge directions in weighted directed graphs with minimum in-flow constraints on vertices. Deciding whether this simple graph model can be manipulated in order to reverse the direction of a particular edge is shown to be PSPACE-complete by a reduction from Quantified Boolean Formulas. We prove this result in a variety of special cases including planar graphs and highly restricted vertex configurations, some of which correspond to a kind of passive constraint logic. Our framework is inspired by (and indeed a generalization of) the ``Generalized Rush Hour Logic'' developed by Flake and Baum. We illustrate the importance of our model of computation by giving simple reductions to show that several motion-planning problems are PSPACE-hard. Our main result along these lines is that classic unrestricted sliding-block puzzles are PSPACE-hard, even if the pieces are restricted to be all dominoes (1x2 blocks) and the goal is simply to move a particular piece. No prior complexity results were known about these puzzles. This result can be seen as a strengthening of the existing result that the restricted Rush Hour puzzles are PSPACE-complete, of which we also give a simpler proof. Finally, we strengthen the existing result that the pushing-blocks puzzle Sokoban is PSPACE-complete, by showing that it is PSPACE-complete even if no barriers are allowed. Comments: 19 pages, 16 figures. Version 4 adds token formulation and minor corrections. To appear in Theoretical Computer Science Subjects: Computational Complexity (cs.CC); Computer Science and Game Theory (cs.GT) ACM classes: F.1; F.2.2 Cite as: arXiv:cs/0205005 [cs.CC]   (or arXiv:cs/0205005v5 [cs.CC] for this version) Submission history From: Erik Demaine [view email] [v1] Sat, 4 May 2002 19:04:59 GMT (76kb) [v2] Sat, 1 Jun 2002 19:45:18 GMT (73kb) [v3] Sun, 31 Aug 2003 02:59:34 GMT (97kb) [v4] Thu, 11 Nov 2004 20:02:04 GMT (77kb) [v5] Thu, 11 Nov 2004 21:11:09 GMT (77kb) Which authors of this paper are endorsers? | Disable MathJax (What is MathJax?) Link back to: arXiv, form interface, contact.
