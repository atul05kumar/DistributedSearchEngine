Replace every element with the next greatest  - GeeksforGeeks GeeksforGeeks A computer science portal for geeks GeeksQuiz Login Home Algorithms DS GATE Interview Corner Q&A C C++ Java Books Contribute Ask a Q About Array Bit Magic C/C++ Articles GFacts Linked List MCQ Misc Output String Tree Graph Replace every element with the next greatest Given an array of integers, replace every element with the next greatest element (greatest element on the right side) in the array. Since there is no element next to the last element, replace it with -1. For example, if the array is {16, 17, 4, 3, 5, 2}, then it should be modified to {17, 5, 5, 5, 2, -1}. The question is very similar to this post and solutions are also similar. A naive method is to run two loops. The outer loop will one by one pick array elements from left to right. The inner loop will find the greatest element present after the picked element. Finally the outer loop will replace the picked element with the greatest element found by inner loop. The time complexity of this method will be O(n*n). A tricky method is to replace all elements using one traversal of the array. The idea is to start from the rightmost element, move to the left side one by one, and keep track of the maximum element. Replace every element with the maximum element. 
#include <stdio.h>

/* Function to replace every element with the
   next greatest element */
void nextGreatest(int arr[], int size)
{
  // Initialize the next greatest element 
  int max_from_right =  arr[size-1];

  // The next greatest element for the rightmost element
  // is always -1
  arr[size-1] = -1;

  // Replace all other elements with the next greatest
  for(int i = size-2; i >= 0; i--)
  {
    // Store the current element (needed later for updating
    // the next greatest element)
    int temp = arr[i];

    // Replace current element with the next greatest
    arr[i] = max_from_right;

    // Update the greatest element, if needed
    if(max_from_right < temp)
       max_from_right = temp;
  }
}

/* A utility Function that prints an array */
void printArray(int arr[], int size)
{
  int i;
  for (i=0; i < size; i++)
    printf("%d ", arr[i]);
  printf("\n");
}

/* Driver program to test above function */
int main()
{
  int arr[] = {16, 17, 4, 3, 5, 2};
  int size = sizeof(arr)/sizeof(arr[0]);
  nextGreatest (arr, size);
  printf ("The modified array is: \n");
  printArray (arr, size);
  return (0);
}
 Output: The modified array is:
17 5 5 5 2 -1 Time Complexity: O(n) where n is the number of elements in array. Please write comments if you find any of the above codes/algorithms incorrect, or find other ways to solve the same problem.           Related Topics: K’th Smallest/Largest Element in Unsorted Array | Set 2 (Expected Linear Time) K’th Smallest/Largest Element in Unsorted Array | Set 1 Time complexity of insertion sort when there are O(n) inversions? How to check if two given sets are disjoint? Minimum Number of Platforms Required for a Railway/Bus Station Find the closest pair from two sorted arrays Print all elements in sorted order from row and column wise sorted matrix Length of the largest subarray with contiguous elements | Set 1 Tweet Writing code in comment? Please use ideone.com and share the link here. sudhanshu http://stackoverflow.com/questions/19720349/find-next-higher-element-in-an-array-for-each-element best approach…………………………….:) sandeep Is output shown in test case correct? {16, 17, 4, 3, 5, 2}, sould be {17,17,5,5,5,-2} Saurabh Pandey The solution for {18,14,8,17,25} is {25,25,25,25,-1} because last element is maximum so every other element will be replaced by 25.  
/* Paste your code here (You may delete these lines if not writing code) */
 kaushik  
//Kaushik Sahu

#include<stdio.h>
#define len sizeof(arr)/sizeof(arr[0])



void nextMax(int arr[],int size)
{
    int i,max,temp;
    max = arr[size-1];
    arr[size-1] = -1;
    temp = max;
    
    for(i=size-2;i>=0;i--)
    {
        if(arr[i] > max)
            temp = arr[i];
        arr[i] = max;
        max = temp;
    } 
    
    printf("\n\n After Replacing by Next Max :: ");
    for(i=0;i<size;i++)
        printf(" %d",arr[i]);       
}



int main()
{
    int arr[] = {16,17,4,3,5,2},i;
    printf("\n\n Initial Array :: ");
    for(i=0;i<len;i++)
        printf(" %d",arr[i]);
    nextMax(arr,len);
    return 0;
}

 abhishek08aug  
#include<stdio.h>
 
int replace_with_next_greatest_element(int array[], int n) {
  int i, next_greatest_element, current_element;
  for(i=n-1, next_greatest_element=-1; i>=0; i--) {
    current_element=array[i];
    array[i]=next_greatest_element;
    if(current_element>next_greatest_element) {
      next_greatest_element=current_element;
    }
  }
}
 
int main(){
  int array[]={16, 17, 4, 3, 5, 2};
  int n=sizeof(array)/sizeof(array[0]);
  int i;
  for(i=0; i<n; i++) {
    printf("%d ", array[i]);
  }
  printf("\n");
  replace_with_next_greatest_element(array, n);
  for(i=0; i<n; i++) {
    printf("%d ", array[i]);
  }
  return 0;
}
 16 17 4 3 5 2 17 5 5 5 2 -1 Ganesh public class ReplaceEveryElementWithTheNextGreatest { public static void main(String[] args) { int arr[] = {16, 17, 4, 3, 5, 2}; int max = -1; for(int i = arr.length – 1; i >= 0; i–) { int temp = arr[i]; arr[i] = max; if (max < temp) max = temp; } for (int i : arr) { System.out.print(i + " "); } } } Himanshu The code should not work for 1 2 3 4 5 6. The output computed would be 6 6 6 6 6 -1. Whereas the expected one is 2 3 4 5 6 -1. Am I missing on something?  
/* Paste your code here (You may delete these lines if not writing code) */
 Kartik It is next greatest, not next greater. Saran #include #include void main() { clrscr(); int a[50],i,j,max,n; cout<>n; cout<<"Enter the elements for the array:"; for(i=1;i>a[i]; for(i=2;i<=n;i++) { max=a[i]; for(j=i+1;jmax) max=a[j]; } a[i-1]=max; } a[n]=-1; for(i=1;i<=n;i++) cout<<"\nThe elements are:"<<a[i]; getch(); } Psycho  
#include <stdio.h>

void printList (int arr[], int size) {
  int i ;
  printf ( "\n" ) ;
  for ( i = 0 ; i < size ; i ++ )
    printf ( "%d ", arr[i] ) ;
  printf ( "\n" );
}

int main () {
  int arr[] = {4, 12, 43, 3, 2, 9, 4, 12, 2, 8, 0} ;
  int size = sizeof(arr) / sizeof(arr[0]) ;
  int i, max = arr[size-1] ;
  printList (arr, size) ;
  for ( i = size-2 ; i >= 0 ; i -- ) {
    if ( arr[i] <= max )
      arr[i] = max ;
    else max = arr[i] ;
  }
  arr[size-1] = -1 ;
  printList (arr, size) ;
  return 0 ;
}
 kartik  
Your code has some problem..i solved it...have a look at if else condition:
void nextGreatest(int arr[], int size)
{
  // Initialize the next greatest element 
  int max_from_right =  arr[size-1];
 
  // The next greatest element for the rightmost element
  // is always -1
  arr[size-1] = -1;
 
  // Replace all other elements with the next greatest
  for(int i = size-2; i >= 0; i--)
  {
    // Store the current element (needed later for updating
    // the next greatest element)
    int temp = arr[i];
 
    // Replace current element with the next greatest
    
 
    // Update the greatest element, if needed
    if(max_from_right > temp)
    {   arr[i]= max_from_right; 
          max_from_right=temp;
    }
    else
    {
        max_from_right=temp;
    }
  }
}

 GeeksforGeeks @kartik: Could you please post an example input for which the original code didn’t work? Ram This solution is wrong.  
/* Paste your code here (You may delete these lines if not writing code) */
 Ram it doesnot work for {1,3,7} .. it gives {7,7,-1} it must be {3,7,-1} kartik @Ram: Please take a closer look at the problem statement. It says the next greatest (not greater) element. chinna hi iam reddy.this is very usefull for me. Interview Experiences Advanced Data Structures Dynamic Programming Greedy Algorithms Backtracking Pattern Searching Divide & Conquer Mathematical Algorithms Recursion Geometric Algorithms Popular Posts All permutations of a given string Memory Layout of C Programs Understanding “extern” keyword in C Median of two sorted arrays Tree traversal without recursion and without stack! Structure Member Alignment, Padding and Data Packing Intersection point of two Linked Lists Lowest Common Ancestor in a BST. Check if a binary tree is BST or not Sorted Linked List to Balanced BST Follow @GeeksforGeeks Subscribe Recent Comments @geeksforgeeks, Some rights reserved        Contact Us! Powered by WordPress & MooTools, customized by geeksforgeeks team
