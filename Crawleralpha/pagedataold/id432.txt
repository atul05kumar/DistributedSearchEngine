Applications of Depth First Search - GeeksforGeeks GeeksforGeeks A computer science portal for geeks GeeksQuiz Login Home Algorithms DS GATE Interview Corner Q&A C C++ Java Books Contribute Ask a Q About Array Bit Magic C/C++ Articles GFacts Linked List MCQ Misc Output String Tree Graph Applications of Depth First Search Depth-first search (DFS) is an algorithm (or technique) for traversing a graph. Following are the problems that use DFS as a bulding block. 1) For an unweighted graph, DFS traversal of the graph produces the minimum spanning tree and all pair shortest path tree. 2) Detecting cycle in a graph A graph has cycle if and only if we see a back edge during DFS. So we can run DFS for the graph and check for back edges. (See this for details) 3) Path Finding We can specialize the DFS algorithm to find a path between two given vertices u and z. i) Call DFS(G, u) with u as the start vertex. ii) Use a stack S to keep track of the path between the start vertex and the current vertex. iii) As soon as destination vertex z is encountered, return the path as the contents of the stack See this for details. 4) Topological Sorting See this for details. 5) To test if a graph is bipartite We can augment either BFS or DFS when we first discover a new vertex, color it opposited its parents, and for each other edge, check it doesn’t link two vertices of the same color. The first vertex in any connected component can be red or black! See this for details. 6) Finding Strongly Connected Components of a graph A directed graph is called strongly connected if there is a path from each vertex in the graph to every other vertex. (See this for DFS based algo for finding Strongly Connected Components) 7) Solving puzzles with only one solution, such as mazes. (DFS can be adapted to find all solutions to a maze by only including nodes on the current path in the visited set.) Sources: http://www8.cs.umu.se/kurser/TDBAfl/VT06/algorithms/LEC/LECTUR16/NODE16.HTM http://en.wikipedia.org/wiki/Depth-first_search http://www.personal.kent.edu/~rmuhamma/Algorithms/MyAlgorithms/GraphAlgor/depthSearch.htm http://ww3.algorithmdesign.net/handouts/DFS.pdf           Related Topics: Vertex Cover Problem | Set 1 (Introduction and Approximate Algorithm) Snake and Ladder Problem Tarjan’s Algorithm to find Strongly Connected Components Shortest path with exactly k edges in a directed and weighted graph Count all possible walks from a source to a destination with exactly k edges Euler Circuit in a Directed Graph Given an array of strings, find if the strings can be chained to form a circle Given a sorted dictionary of an alien language, find order of characters Tags: Graph Tweet Writing code in comment? Please use ideone.com and share the link here. rohan DFS can be used to generate all permutations of a string. Code: http://ideone.com/cKgy3m Anonymous Nice one Sriharsha g.r.v pls tell me if my conclusion is wrong “if a graph is connected,directed and non acyclic then it is cyclic graph” xyz HI BJ Hi, Can you please provide a algo for finding PATH between 2 vertices using DFS… chetan There is no notion of “Minimum” in spanning tree of unweighted graph.i.e all spanning trees of an unweighted graph has same no. of edges.Please correct the first point. Amit IMO,what they wanted to convey was, when DFS/BFS starts from some node say “s” then from that node the distance to all other nodes is shortest. Anand http://anandtechblog.blogspot.com/2011/06/find-if-directed-graph-is-strongly.html Anand http://anandtechblog.blogspot.com/2011/06/find-if-directed-graph-is-strongly.html Ravi More on applications of DFS: * DFS is the basic mechanism for solving Backtracking problems. * Topological sorting is important in project management. * Bipartite graphs are useful for modelling matching problems. * BFS can also be used for finding MST and all pair shortest paths in unweighted graphs. Interview Experiences Advanced Data Structures Dynamic Programming Greedy Algorithms Backtracking Pattern Searching Divide & Conquer Mathematical Algorithms Recursion Geometric Algorithms Popular Posts All permutations of a given string Memory Layout of C Programs Understanding “extern” keyword in C Median of two sorted arrays Tree traversal without recursion and without stack! Structure Member Alignment, Padding and Data Packing Intersection point of two Linked Lists Lowest Common Ancestor in a BST. Check if a binary tree is BST or not Sorted Linked List to Balanced BST Follow @GeeksforGeeks Subscribe Recent Comments @geeksforgeeks, Some rights reserved        Contact Us! Powered by WordPress & MooTools, customized by geeksforgeeks team
