Greedy Algorithms - GeeksQuiz GeeksQuiz Computer science mock tests for geeks Home Latest Questions Articles C/C++ Programs Contribute Books Subscribe Greedy Algorithms Please wait while the activity loads. If this activity does not load, try refreshing your browser. Also, this page requires javascript. Please visit using a browser with javascript enabled. If loading fails, click here to try again Question 1 Which of the following standard algorithms is not a Greedy algorithm? A Dijkstra's shortest path algorithm B Prim's algorithm C Kruskal algorithm D Huffman Coding E Bellmen Ford Shortest path algorithm Discuss it Question 1 Explanation:  See http://www.geeksforgeeks.org/greedy-algorithms-set-1-activity-selection-problem/ and http://www.geeksforgeeks.org/dynamic-programming-set-23-bellman-ford-algorithm/ Question 2 A networking company uses a compression technique to encode the message before transmitting over the network. Suppose the message contains the following characters with their frequency: 
character   Frequency
    a	        5
    b           9
    c           12
    d           13
    e           16
    f           45
 If the compression technique used is Huffman Coding, how many bits will be saved in the message? A 224 B 800 C 576 D 324 Discuss it Question 2 Explanation:  
Total number of characters in the message = 100. 
Each character takes 1 byte. So total number of bits needed = 800.

After Huffman Coding, the characters can be represented with:
f: 0
c: 100
d: 101
a: 1100
b: 1101
e: 111
Total number of bits needed = 224
Hence, number of bits saved = 800 - 224 = 576
See here for complete explanation and algorithm.
 Question 3 What is the time complexity of Huffman Coding? A O(N) B O(NlogN) C O(N(logN)^2) D O(N^2) Discuss it Question 3 Explanation:  O(nlogn) where n is the number of unique characters. If there are n nodes, extractMin() is called 2*(n – 1) times. extractMin() takes O(logn) time as it calles minHeapify(). So, overall complexity is O(nlogn). See here for more details of the algorithm. Question 4 In question #2, which of the following represents the word "dead"? A 1011111100101 B 0100000011010 C Both A and B D None of these Discuss it Question 4 Explanation:  The Huffman Tree generated is: 
character   code-word
    f          0
    c          100
    d          101
    a          1100
    b          1101
    e          111
 The word dead can be represented as: 101 111 1100 101 However, the alternative codeword can also be found by assigning 1 to the left edge and 0 to the right edge of the tree, i.e. dead can also be represented as: 010 000 0011 010 See here for more details of the algorithm. Question 5 Which of the following is true about Kruskal and Prim MST algorithms? Assume that Prim is implemented for adjacency list representation using Binary Heap and Kruskal is implemented using union by rank. A Worst case time complexity of both algorithms is same. B Worst case time complexity of Kruskal is better than Prim C Worst case time complexity of Prim is better than Kruskal Discuss it Question 5 Explanation:  See following Kruskal’s Minimum Spanning Tree Algorithm Prim’s MST for Adjacency List Representation Question 6 Which of the following is true about Huffman Coding. A Huffman coding may become lossy in some cases B Huffman Codes may not be optimal lossless codes in some cases C In Huffman coding, no code is prefix of any other code. D All of the above Discuss it Question 6 Explanation:  Huffman coding is a lossless data compression algorithm. The codes assigned to input characters are Prefix Codes, means the codes are assigned in such a way that the code assigned to one character is not prefix of code assigned to any other character. This is how Huffman Coding makes sure that there is no ambiguity when decoding. Question 7 Suppose the letters a, b, c, d, e, f have probabilities 1/2, 1/4, 1/8, 1/16, 1/32, 1/32 respectively. Which of the following is the Huffman code for the letter a, b, c, d, e, f? A 0, 10, 110, 1110, 11110, 11111 B 11, 10, 011, 010, 001, 000 C 11, 10, 01, 001, 0001, 0000 D 110, 100, 010, 000, 001, 111 Discuss it Question 7 Explanation:  We get the following Huffman Tree after applying Huffman Coding Algorithm. The idea is to keep the least probable characters as low as possible by picking them first. 
The letters a, b, c, d, e, f have probabilities 
1/2, 1/4, 1/8, 1/16, 1/32, 1/32 respectively. 

                 1
               /   \
              /     \
             1/2    a(1/2)
            /  \
           /    \
          1/4  b(1/4) 
         /   \
        /     \
       1/8   c(1/8) 
      /  \
     /    \
   1/16  d(1/16)
  /  \
 e    f Question 8 Suppose the letters a, b, c, d, e, f have probabilities 1/2, 1/4, 1/8, 1/16, 1/32, 1/32 respectively. What is the average length of Huffman codes? A 3 B 2.1875 C 2.25 D 1.19375 Discuss it Question 8 Explanation:  We get the following Huffman Tree after applying Huffman Coding Algorithm. The idea is to keep the least probable characters as low as possible by picking them first. 
The letters a, b, c, d, e, f have probabilities 
1/2, 1/4, 1/8, 1/16, 1/32, 1/32 respectively. 

                 1
               /   \
              /     \
             1/2    a(1/2)
            /  \
           /    \
          1/4  b(1/4) 
         /   \
        /     \
       1/8   c(1/8) 
      /  \
     /    \
   1/16  d(1/16)
  /  \
 e    f
The average length = (1*1/2 + 2*1/4 + 3*1/8 + 4*1/16 + 5*1/32 + 5*1/32)
                   = 1.9375 
 There are 8 questions to complete. You have completed questions question Your score is Correct Wrong Partial-Credit You have not finished your quiz. If you leave this page, your progress will be lost. Correct Answer You Selected Not Attempted Final Score on Quiz Attempted Questions Correct Attempted Questions Wrong Questions Not Attempted Total Questions on Quiz Question Details Results Date Score Hint Time allowed minutes seconds Time used Answer Choice(s) Selected Question Text All done Need more practice! Keep trying! Not bad! Good work! Perfect!      Tweet Categories Articles (105) Algorithms (21) C (13) C++ (16) Data Structures (29) DBMS (1) Interview Experiences (6) Java (2) Operating Systems (1) Searching and Sorting (10) Programs (35) Quizzes (1,744) Aptitude (1) Computer Science Quizzes (1,742) Algorithms (147) C (207) C++ (129) Data Structures (132) DBMS (2) GATE (1,046) Java (51) Operating Systems (28) Web technologies (1) Recent Discussions Valid XHTML Strict 1.0 Powered by WordPress & MooTools | MiniMoo 1.3.4
