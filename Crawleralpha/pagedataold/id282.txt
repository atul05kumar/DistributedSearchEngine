Divide and Conquer - GeeksQuiz GeeksQuiz Computer science mock tests for geeks Home Latest Questions Articles C/C++ Programs Contribute Books Subscribe Divide and Conquer Please wait while the activity loads. If this activity does not load, try refreshing your browser. Also, this page requires javascript. Please visit using a browser with javascript enabled. If loading fails, click here to try again Question 1 Which of the following algorithms is NOT a divide & conquer algorithm by nature? A Euclidean algorithm to compute the greatest common divisor B Heap Sort C Cooley-Tukey fast Fourier transform D Quick Sort Discuss it Question 2 Consider the following C program 
int main() 
{ 
   int x, y, m, n; 
   scanf ("%d %d", &x, &y); 
   /* x > 0 and y > 0 */
   m = x; n = y; 
   while (m != n) 
   { 
      if(m>n) 
         m = m - n; 
      else
         n = n - m; 
   } 
   printf("%d", n); 
}
 What does the program compute? (GATE CS 2004) A x + y using repeated subtraction B x mod y using repeated subtraction C the greatest common divisor of x and y D the least common multiple of x and y Discuss it Question 2 Explanation:  This is an implementation of Euclid’s algorithm to find GCD Question 3 Consider the polynomial p(x) = a0 + a1x + a2x^2 +a3x^3, where ai != 0, for all i. The minimum number of multiplications needed to evaluate p on an input x is: A 3 B 4 C 6 D 9 Discuss it Question 3 Explanation:  Multiplications can be minimized using following order for evaluation of the given expression. p(x) = a0 + x(a1 + x(a2 + a3x)) Question 4 Maximum Subarray Sum problem is to find the subarray with maximum sum. For example, given an array {12, -13, -5, 25, -20, 30, 10}, the maximum subarray sum is 45. The naive solution for this problem is to calculate sum of all subarrays starting with every element and return the maximum of all. We can solve this using Divide and Conquer, what will be the worst case time complexity using Divide and Conquer. A O(n) B O(nLogn) C O(Logn) D O(n^2) Discuss it Question 4 Explanation:  See http://www.geeksforgeeks.org/divide-and-conquer-maximum-sum-subarray/ Question 5 Consider a situation where you don't have function to calculate power (pow() function in C) and you need to calculate x^n where x can be any number and n is a positive integer. What can be the best possible time complexity of your power function? A O(n) B O(nLogn) C O(LogLogn) D O(Logn) Discuss it Question 5 Explanation:  We can calculate power using divide and conquer in O(Logn) time. See http://www.geeksforgeeks.org/write-a-c-program-to-calculate-powxn/. Question 6 Consider the problem of searching an element x in an array 'arr[]' of size n. The problem can be solved in O(Logn) time if. 1) Array is sorted 2) Array is sorted and rotated by k. k is given to you and k <= n 3) Array is sorted and rotated by k. k is NOT given to you and k <= n 4) Array is not sorted A 1 Only B 1 & 2 only C 1, 2 and 3 only D 1, 2, 3 and 4 Discuss it Question 6 Explanation:  See http://www.geeksforgeeks.org/search-an-element-in-a-sorted-and-pivoted-array/ There are 6 questions to complete. You have completed questions question Your score is Correct Wrong Partial-Credit You have not finished your quiz. If you leave this page, your progress will be lost. Correct Answer You Selected Not Attempted Final Score on Quiz Attempted Questions Correct Attempted Questions Wrong Questions Not Attempted Total Questions on Quiz Question Details Results Date Score Hint Time allowed minutes seconds Time used Answer Choice(s) Selected Question Text All done Need more practice! Keep trying! Not bad! Good work! Perfect!      Tweet Categories Articles (105) Algorithms (21) C (13) C++ (16) Data Structures (29) DBMS (1) Interview Experiences (6) Java (2) Operating Systems (1) Searching and Sorting (10) Programs (35) Quizzes (1,744) Aptitude (1) Computer Science Quizzes (1,742) Algorithms (147) C (207) C++ (129) Data Structures (132) DBMS (2) GATE (1,046) Java (51) Operating Systems (28) Web technologies (1) Recent Discussions Valid XHTML Strict 1.0 Powered by WordPress & MooTools | MiniMoo 1.3.4
