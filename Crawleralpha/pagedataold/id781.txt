Red-Black Tree | Set 2 (Insert) - GeeksforGeeks GeeksforGeeks A computer science portal for geeks GeeksQuiz Login Home Algorithms DS GATE Interview Corner Q&A C C++ Java Books Contribute Ask a Q About Array Bit Magic C/C++ Articles GFacts Linked List MCQ Misc Output String Tree Graph Red-Black Tree | Set 2 (Insert) In the previous post, we discussed introduction to Red-Black Trees. In this post, insertion is discussed. In AVL tree insertion, we used rotation as a tool to do balancing after insertion caused imbalance. In Red-Black tree, we use two tools to do balancing. 1) Recoloring 2) Rotation We try recoloring first, if recoloring doesn’t work, then we go for rotation. Following is detailed algorithm. The algorithms has mainly two cases depending upon the color of uncle. If uncle is red, we do recoloring. If uncle is black, we do rotations and/or recoloring. Color of a NULL node is considered as BLACK. Let x be the newly inserted node. 1) Perform standard BST insertion and make the color of newly inserted nodes as RED. 2) Do following if color of x’s parent is not BLACK or x is not root. ….a) If x’s uncle is RED (Grand parent must have been black from property 4) ……..(i) Change color of parent and uncle as BLACK. ……..(ii) color of grand parent as RED. ……..(iii) Change x = x’s grandparent, repeat steps 2 and 3 for new x. ….b) If x’s uncle is BLACK, then there can be four configurations for x, x’s parent (p) and x’s grandparent (g) (This is similar to AVL Tree) ……..i) Left Left Case (p is left child of g and x is left child of p) ……..ii) Left Right Case (p is left child of g and x is right child of p) ……..iii) Right Right Case (Mirror of case a) ……..iv) Right Left Case (Mirror of case c) 3) If x is root, change color of x as BLACK (Black height of complete tree increases by 1). Following are operations to be performed in four subcases when uncle is BLACK. All four cases when Uncle is BLACK Left Left Case (See g, p and x) Left Right Case (See g, p and x) Right Right Case (See g, p and x) Right Left Case (See g, p and x) Examples of Insertion Please refer C Program for Red Black Tree Insertion for complete implementation of above algorithm. Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above.           Related Topics: Perfect Binary Tree Specific Level Order Traversal Print Nodes in Top View of Binary Tree K Dimensional Tree Convert a Binary Tree to Threaded binary tree Serialize and Deserialize an N-ary Tree Serialize and Deserialize a Binary Tree Print nodes between two given level numbers of a binary tree Find Height of Binary Tree represented by Parent array Tags: Advance Data Structures, Advanced Data Structures Tweet Writing code in comment? Please use ideone.com and share the link here. http://kaushik-lele-algos-datastructures.blogspot.in/ kaushik Lele I ran RedBlackTreeViewer.java; mentioned below. But code is not correct. When I entered number in this sequence 4,7,17; it showed a tree with 4 as root and 12 as left node !! that is wrong. So we will need to rectify code. http://kaushik-lele-algos-datastructures.blogspot.in/ kaushik Lele You can take complete Java code. Take java classes from here. As they are inherited. http://cs.lmu.edu/~ray/notes/redblacktrees/ http://cs.lmu.edu/~ray/notes/binarysearchtrees/ http://cs.lmu.edu/~ray/notes/binarytrees/ Run RedBlackTreeViewer.java http://kaushik-lele-algos-datastructures.blogspot.in/ kaushik Lele Very well Explained. Keep these rules handy and view this animation. http://www.youtube.com/watch?v=vDHFF4wjWYU After every insertion; apply these rule and guess what should be behaviour. You will learn it quite quickly. robinhood very well xplained.:) sachi059 Good Explanation Anuj First time ever, I understood insertion in red-black tree. Thanks. Interview Experiences Advanced Data Structures Dynamic Programming Greedy Algorithms Backtracking Pattern Searching Divide & Conquer Mathematical Algorithms Recursion Geometric Algorithms Popular Posts All permutations of a given string Memory Layout of C Programs Understanding “extern” keyword in C Median of two sorted arrays Tree traversal without recursion and without stack! Structure Member Alignment, Padding and Data Packing Intersection point of two Linked Lists Lowest Common Ancestor in a BST. Check if a binary tree is BST or not Sorted Linked List to Balanced BST Follow @GeeksforGeeks Subscribe Recent Comments @geeksforgeeks, Some rights reserved        Contact Us! Powered by WordPress & MooTools, customized by geeksforgeeks team
